# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Vercel Production Deployment with Github Actions

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  push:
    branches: ['master']
  pull_request:
    branches: ['master']

jobs:
  LintTest:
    name: Lint

    runs-on: ubuntu-latest

    steps:
      - name: Clone Repository
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'yarn'

      - name: Install Dependencies
        run: |
          echo "Installing Dependencies..."
          yarn

      - name: Run Linting
        run: |
          echo "Running your linting tests..."
        env:
          CI: true

  JestTests:
    runs-on: ubuntu-latest

    needs: LintTest

    steps:
      - name: Clone Repository
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'yarn'

      # - name: Install Dependencies
      #   run: |
      #     echo "Installing Dependencies..."
      #     yarn

      - name: Running tests
        run: |
          echo "Running your Jest tests..."
          yarn test-ci
        env:
          CI: true

  DeployProduction:
    runs-on: ubuntu-latest

    needs: [LintTest, JestTests]

    steps:
      - name: Clone Repository
        uses: actions/checkout@v3

      - name: Install Vercel CLI
        run: |
          echo "Installing Vercel CLI..."
          yarn add vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
